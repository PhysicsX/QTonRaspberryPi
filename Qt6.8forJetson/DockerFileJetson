# Define build arguments for Ubuntu, CUDA, and GCC versions
ARG UBUNTU_VERSION=20.04
ARG CUDA_VERSION=11-4
ARG UBUNTU_VERSION_SHORT=2004
ARG JETPACK_VERSION=r35.2
ARG BOARD_TYPE=t194

# Use an ARM64 Ubuntu base image with the specified version
FROM arm64v8/ubuntu:${UBUNTU_VERSION}

# Create and initialize the log file
RUN touch /build.log

# Set up the NVIDIA repository and keyring
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    software-properties-common | tee -a /build.log

ARG UBUNTU_VERSION_SHORT
ARG JETPACK_VERSION
ARG BOARD_TYPE
RUN \
    # Use the manually defined short version to download the CUDA repository pin file \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${UBUNTU_VERSION_SHORT}/x86_64/cuda-ubuntu${UBUNTU_VERSION_SHORT}.pin && \
    mv cuda-ubuntu${UBUNTU_VERSION_SHORT}.pin /etc/apt/preferences.d/cuda-repository-pin-600 && \
    \
    # Add the new NVIDIA public key for CUDA repository \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${UBUNTU_VERSION_SHORT}/x86_64/3bf863cc.pub | tee -a /build.log && \
    \
    # Add the CUDA repository to the sources list \
    add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu${UBUNTU_VERSION_SHORT}/x86_64/ /" | tee -a /build.log && \
    \
    # Add NVIDIA repositories and keyring for Jetson \
    echo "deb https://repo.download.nvidia.com/jetson/common ${JETPACK_VERSION} main" > /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
    echo "deb https://repo.download.nvidia.com/jetson/${BOARD_TYPE} ${JETPACK_VERSION} main" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
    wget -qO - https://repo.download.nvidia.com/jetson/jetson-ota-public.asc | apt-key add -

ARG CUDA_VERSION

# Install NVIDIA drivers and libraries
RUN apt-get update && apt-get install -y \
    cuda-toolkit-${CUDA_VERSION} \
    libcudnn8 \
    libnvinfer8 \
    nvidia-l4t-core | tee -a /build.log

# Install additional dependencies for cross-compilation
RUN apt-get update && apt-get install -y  \
    '^libxcb.*-dev' \
    libx11-xcb-dev \
    '.*libxcb.*' \
    libxrender-dev \
    libxi-dev \
    libfontconfig1-dev \
    libudev-dev \
    libgles2-mesa-dev \
    libgl1-mesa-dev \
    git \
    bison \
    python3 \
    gperf \
    pkg-config \
    make \
    libclang-dev \
    build-essential \
    libegl1-mesa-dev \
    libgbm-dev \
    mesa-common-dev \
    libxcomposite1 \
    libxcb-keysyms1 \
    libxcb-keysyms1-dev \
    libxcb-image0 \
    libxss-dev \
    libxtst-dev \
    libxrandr-dev \
    libglu1-mesa-dev \
    libxkbcommon-dev \
    libpq-dev \
    libxkbcommon-x11-dev | tee -a /build.log

# Create the sysroot tarball
RUN tar cvfz /jetsonSysroot.tar.gz -C / lib usr/include usr/lib | tee -a /build.log
